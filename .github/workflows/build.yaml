#
# Copyright (C) 2020  Sebastian Pipping <sebastian@pipping.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: Build (Linux, Ubuntu)

on:
- pull_request
- push


env:
  svn-cache-version: v2
  svn-filter-cache-version: v3
  cache-version: v3
  retention-days: 2
  LANG: "ja_JP.UTF-8"
  svn-org: "ttssh2migrate/workdir/ttssh2.org"
  svn-filtered: "ttssh2migrate/workdir/ttssh2"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-22.04
            qt: qt5-qmake
          - runs-on: ubuntu-18.04
            qt: qt5-default

    name: Build (Linux, ${{ matrix.runs-on }})
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: 'Install build dependencies'
        run: |-
          set -e
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends \
            build-essential \
            libapr1-dev \
            libsvn-dev \
            ${{ matrix.qt }} \
            qtbase5-dev

      - name: 'Checkout Git branch'
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: 'Configure'
        run: |-
          qmake

      - name: 'Build'
        run: |-
          make

      - name: 'Test'
        run: |-
          ./test.sh --no-make

      - name: 'Install'
        run: |-
          set -e
          make INSTALL_ROOT="${PWD}"/ROOT install
          find ROOT | sort

      - name: ja_JP.UTF-8
        run: |
            sudo locale-gen ja_JP.UTF-8
            sudo update-locale LANG=ja_JP.UTF-8

      - name: date
        run: |
            date

      # See https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Get the youngest revision
        id: get_revision
        run: |
          REVISION=$(svn info  --no-newline --show-item revision http://svn.osdn.net/svnroot/ttssh2/ )
          echo "revision=$REVISION" >> $GITHUB_ENV
          cat  $GITHUB_ENV

      - name: show revision
        id: show_revision
        run: |
          echo "${{env.revision}}"

      - name: create cache directories. (This is for the first time build.)
        run: |
          mkdir -p ${{env.svn-org}}
          mkdir -p ${{env.svn-filtered}}

      # dependency
      # * Upstream svn repository
      #   * Revision                        : ${{env.revision}}
      - name: Get cached (id_cache-svn)
        id: cache-svn
        uses: actions/cache@v3
        with:
          path: ${{env.svn-org}}
          key: ${{env.svn-cache-version}}-ttssh2-r${{env.revision}}
          restore-keys: |
            ${{env.svn-cache-version}}-ttssh2-r10379

      - name: mirror (depends on id_cache-svn)
        working-directory: ttssh2migrate
        run: |
          ./1.mirror-ttssh2.sh

      # dependency
      # * Upstream svn repository
      #   * Revision                        : ${{env.revision}}
      # * filtered svn repository
      #   * script to filter svn dump       : '2.filter-svndmp.sh'
      #   * script to create user map       : 'make-identity-map.py'
      #   * input data user map             : 'user-list.csv'
      - name: Get cached (id_cache-svn-filtered)
        id: cache-svn-filtered
        uses: actions/cache@v3
        with:
          path: ${{env.svn-filtered}}
          key: ${{env.svn-filter-cache-version}}-ttssh2-svn-filtered-r${{env.revision}}-${{ hashFiles('ttssh2migrate/2.filter-svndmp.sh', 'ttssh2migrate/make-identity-map.py', 'ttssh2migrate/user-list.csv') }}

      - name: filter svn dump (cache-svn-filtered)
        if: ${{ steps.cache-svn-filtered.outputs.cache-hit != 'true' }}
        working-directory: ttssh2migrate
        run: |
          ./2.filter-svndmp.sh

      # - name: svn log
      #   working-directory: ttssh2migrate
      #   run: |
      #     ./3.svnlog.sh

      # - name: archive SVN
      #   working-directory: ttssh2migrate/workdir
      #   run: |
      #     tar cfj ttssh2-svn.tar.bz2      ttssh2

      # - name: artifacts SVN repository
      #   uses: actions/upload-artifact@v3
      #   working-directory: ttssh2migrate
      # with:
      #     name: artifacts-SVN-build-${{github.run_number}}-${{github.run_id}}
      #     path: |
      #       workdir/**.tar.bz2
      #     # See https://github.com/actions/upload-artifact#retention-period
      #     retention-days: ${{env.retention-days}}

      # - name: artifacts SVN log
      #   uses: actions/upload-artifact@v3
      #   working-directory: ttssh2migrate
      #   with:
      #     name: artifacts-SVN-log-${{github.run_number}}-${{github.run_id}}
      #     path: |
      #       workdir/**.log
      #     # See https://github.com/actions/upload-artifact#retention-period
      #     retention-days: ${{env.retention-days}}

      - name: migrate
        working-directory: ttssh2migrate
        run: |
          export PATH=$(pwd)/..:$PATH
          ./4.migrate.sh

      - name: git repack
        working-directory: ttssh2migrate
        run: |
          ./5.git-repack.sh

      - name: artifacts migration log
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: artifacts-migration-log-build-${{github.run_number}}-${{github.run_id}}
          path: |
            ttssh2migrate/workdir/gitdir/gitlog-ttssh2
            ttssh2migrate/workdir/gitdir/log-ttssh2
            ttssh2migrate/workdir/gitdir/log-migration.log
          # See https://github.com/actions/upload-artifact#retention-period
          retention-days: ${{env.retention-days}}

      - name: archive GIT
        working-directory: ttssh2migrate/workdir/gitdir-repack
        run: |
          tar cfj ttssh2-git.tar.bz2      ttssh2

      - name: artifacts GIT repository
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-GIT-build-${{github.run_number}}-${{github.run_id}}
          path: |
            ttssh2migrate/workdir/gitdir-repack/**.tar.bz2
          # See https://github.com/actions/upload-artifact#retention-period
          retention-days: ${{env.retention-days}}
